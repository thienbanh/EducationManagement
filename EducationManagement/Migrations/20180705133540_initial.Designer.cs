// <auto-generated />
using System;
using EducationManagement.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EducationManagement.Migrations
{
    [DbContext(typeof(EducationManagementContext))]
    [Migration("20180705133540_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EducationManagement.Entities.Classes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("GradesId");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("GradesId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("EducationManagement.Entities.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountLession");

                    b.Property<string>("Code");

                    b.Property<int>("CourseUnit");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Name");

                    b.Property<int>("Practice");

                    b.Property<int>("Theory");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("EducationManagement.Entities.CoursesGrades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoursesId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("GradesId");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("CoursesId");

                    b.HasIndex("GradesId");

                    b.ToTable("CoursesGrades");
                });

            modelBuilder.Entity("EducationManagement.Entities.Grades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("EducationManagement.Entities.Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassesId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("Dob");

                    b.Property<int>("Gender");

                    b.Property<string>("Name");

                    b.Property<int>("Status");

                    b.Property<string>("StudentId");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("ClassesId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EducationManagement.Entities.Classes", b =>
                {
                    b.HasOne("EducationManagement.Entities.Grades", "Grades")
                        .WithMany("Classes")
                        .HasForeignKey("GradesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EducationManagement.Entities.CoursesGrades", b =>
                {
                    b.HasOne("EducationManagement.Entities.Courses", "Courses")
                        .WithMany("CoursesGrades")
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EducationManagement.Entities.Grades", "Grades")
                        .WithMany("CoursesGrades")
                        .HasForeignKey("GradesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EducationManagement.Entities.Students", b =>
                {
                    b.HasOne("EducationManagement.Entities.Classes", "Classes")
                        .WithMany("Students")
                        .HasForeignKey("ClassesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
